Return-Path: <tomoyo-users-en-bounces@lists.osdn.me>
X-Original-To: lists+tomoyo-users-en@lfdr.de
Delivered-To: lists+tomoyo-users-en@lfdr.de
Received: from lists.osdn.me (lists.osdn.me [44.238.218.2])
	by mail.lfdr.de (Postfix) with ESMTP id 9CE7496B265
	for <lists+tomoyo-users-en@lfdr.de>; Wed,  4 Sep 2024 09:10:10 +0200 (CEST)
Received: from [127.0.0.1] (localhost [127.0.0.1])
	by lists.osdn.me (Postfix) with ESMTP id 34103144F0D;
	Wed,  4 Sep 2024 16:10:09 +0900 (JST)
X-Original-To: tomoyo-users-en@lists.osdn.me
Delivered-To: lists-post+tomoyo-users-en@lists.osdn.me
Received: from lists.osdn.me (localhost [127.0.0.1])
 by lists.osdn.me (Postfix) with ESMTP id AB40F144EFF;
 Wed,  4 Sep 2024 16:10:06 +0900 (JST)
X-Spam-Checker-Version: SpamAssassin 3.4.2 (2018-09-13) on sf-lists
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=7.0 tests=none autolearn=disabled
 version=3.4.2
Received: from www262.sakura.ne.jp (www262.sakura.ne.jp [202.181.97.72])
 by lists.osdn.me (Postfix) with ESMTP;
 Wed,  4 Sep 2024 16:10:06 +0900 (JST)
Received: from fsav412.sakura.ne.jp (fsav412.sakura.ne.jp [133.242.250.111])
 by www262.sakura.ne.jp (8.15.2/8.15.2) with ESMTP id 4847A5lO001031;
 Wed, 4 Sep 2024 16:10:05 +0900 (JST)
 (envelope-from penguin-kernel@I-love.SAKURA.ne.jp)
Received: from www262.sakura.ne.jp (202.181.97.72)
 by fsav412.sakura.ne.jp (F-Secure/fsigk_smtp/550/fsav412.sakura.ne.jp);
 Wed, 04 Sep 2024 16:10:05 +0900 (JST)
Message-ID: <caafb609-8bef-4840-a080-81537356fc60@I-love.SAKURA.ne.jp>
Date: Wed, 4 Sep 2024 16:10:05 +0900
MIME-Version: 1.0
User-Agent: Mozilla Thunderbird
Content-Language: en-US
To: linux-security-module <linux-security-module@vger.kernel.org>,
 LKML <linux-kernel@vger.kernel.org>
From: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
X-Virus-Status: No
X-Virus-Checker-Version: clamassassin 1.2.4 with clamdscan / ClamAV
 0.102.4/26439/Mon Jan 31 18:24:40 2022
Subject: [tomoyo-users-en 760] [PATCH] LSM: allow loadable kernel module
 based LSM modules
X-BeenThere: tomoyo-users-en@lists.osdn.me
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: <tomoyo-users-en.lists.osdn.me>
List-Unsubscribe: <https://lists.osdn.me/mailman/options/tomoyo-users-en>,
 <mailto:tomoyo-users-en-request@lists.osdn.me?subject=unsubscribe>
List-Archive: <https://lists.osdn.me/mailman/archives/tomoyo-users-en>
List-Post: <mailto:tomoyo-users-en@lists.osdn.me>
List-Help: <mailto:tomoyo-users-en-request@lists.osdn.me?subject=help>
List-Subscribe: <https://lists.osdn.me/mailman/listinfo/tomoyo-users-en>,
 <mailto:tomoyo-users-en-request@lists.osdn.me?subject=subscribe>
Reply-To: tomoyo-users-en@lists.osdn.me
Cc: tomoyo-dev-en@lists.osdn.me, tomoyo-users-en@lists.osdn.me
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: tomoyo-users-en-bounces@lists.osdn.me
Sender: "tomoyo-users-en" <tomoyo-users-en-bounces@lists.osdn.me>

VW50aWwgMi42LjIzLCBpdCB3YXMgb2ZmaWNpYWxseSBwb3NzaWJsZSB0byByZWdpc3Rlci91bnJl
Z2lzdGVyIExTTSBtb2R1bGVzCnRoYXQgYXJlIGltcGxlbWVudGVkIGFzIGxvYWRhYmxlIGtlcm5l
bCBtb2R1bGVzLiBCdXQgZnJvbSAyLjYuMjQgdG8gNi4xMSwKaXQgaXMgbm90IG9mZmljaWFsbHkg
cG9zc2libGUgdG8gZG8gc28gZHVlIHRvIGNvbW1pdCAyMDUxMGYyZjRlMmQKKCJzZWN1cml0eTog
Q29udmVydCBMU00gaW50byBhIHN0YXRpYyBpbnRlcmZhY2UiKS4gV2hlbiB0aGF0IGNvbW1pdCB3
YXMKZGlzY3Vzc2VkLCBlZmZlY3RpdmVseSBTRUxpbnV4IHdhcyB0aGUgb25seSBpbi10cmVlIExT
TSB1c2VyLCBhbmQgdGhlcmVmb3JlCm91dC1vZi10cmVlIExTTSB1c2VycyB3ZXJlIG5vdCBhYmxl
IHRvIGV4cHJlc3Mgb3BpbmlvbnMuCgpCdXQgdGhhdCBjb21taXQgbWlzc2VkIHJlYWxpdGllcyB0
aGF0CgogIGhvdyBkaWZmaWN1bHQvdW5yZWFsaXN0aWMgZm9yIExpbnV4IHVzZXJzIHdobyBhcmUg
dXNpbmcgcHJlYnVpbHQga2VybmVsCiAgcGFja2FnZXMgcHJvdmlkZWQgYnkgTGludXggZGlzdHJp
YnV0b3JzIHRvIHJlcGxhY2UgdGhlaXIga2VybmVscwoKICBob3cgZGlmZmljdWx0IGZvciBMaW51
eCBkaXN0cmlidXRvcnMgdG8gYWxsb3cgdGhlaXIgdXNlcnMgdG8gdXNlIGluLXRyZWUKICBMU00g
bW9kdWxlcyB3aGljaCB0aGF0IGRpc3RyaWJ1dG9yIGlzIG5vdCBmYW1pbGlhciB3aXRoIFsxXSBi
ZWNhdXNlIExpbnV4CiAgZGlzdHJpYnV0b3JzIGFyZSBzdXBwb3NlZCB0byBzdXBwb3J0IGtlcm5l
bCBwYWNrYWdlcyB0aGV5IGJ1aWx0IGFuZAogIHNoaXBwZWQKCiAgTGludXggZGlzdHJpYnV0b3Jz
IGRvIG5vdCB3YW50IHRvIGVuYWJsZSBvdXQtb2YtdHJlZSBjb2RlIGR1ZSB0byB1cHN0cmVhbQog
IGZpcnN0IHBvbGljeSwgd2hpbGUgTGludXgga2VybmVsIGRldmVsb3BtZW50IGNvbW11bml0eSBj
YW4gbm90IGFmZm9yZAogIGFjY2VwdGluZyB3aGF0ZXZlciBwcm9wb3NlZCBjb2RlIGR1ZSB0byBs
aW1pdGVkIHJlc291cmNlcwoKLiBUaGVzZSByZWFsaXRpZXMga2VlcCBhd2F5IG91dC1vZi10cmVl
IExTTXMgKG9yIGV2ZW4gaW4tdHJlZSBMU01zKSB3aGljaAphcmUgbm90IGJ1aWx0IGludG8gdm1s
aW51eCwgYW5kIGNhdXNlZCB1bmhhcHB5IHRpbWVzIGZvciBMaW51eCB1c2VycyB3aG8Kd2FudCB0
byB0cnkgYSBuZXcgTFNNIG1vZHVsZS4gQW4gYXBwcm9hY2ggdGhhdCBjYW4gc3Vydml2ZSBpcyB0
aGF0IExTTQptb2R1bGVzIHRoYXQgY2Fubm90IGJlIGJ1aWx0IGludG8gdm1saW51eCBpcyB0byBw
cm92aWRlIGFzIGEgbG9hZGFibGUKa2VybmVsIG1vZHVsZS4KClRoZXJlZm9yZSwgSSBoYWQgYmVl
biBwcm92aWRpbmcgYSB3b3JrYXJvdW5kIGNhbGxlZCBBS0FSSSB0aGF0IGFsbG93cyBMaW51eAp1
c2VycyB0byB1c2UgVE9NT1lPIGFzIGEgbG9hZGFibGUga2VybmVsIG1vZHVsZSBbMl0gZnJvbSAy
LjYuMCB0byA2LjExLiBCdXQKY29tbWl0IDQxN2M1NjQzY2Q2NyAoImxzbTogcmVwbGFjZSBpbmRp
cmVjdCBMU00gaG9vayBjYWxscyB3aXRoIHN0YXRpYwpjYWxscyIpIG1hZGUgaXQgZGlmZmljdWx0
IHRvIHVzZSBBS0FSSSBkdWUgdG8gcmVwbGFjaW5nIHRoZSBsaW5rZWQgbGlzdAood2hpY2ggY2Fu
IGFsbG93IHJlZ2lzdGVyaW5nIG1vcmUgdGhhbiBudW1iZXIgb2YgYnVpbHQtaW4gTFNNIG1vZHVs
ZXMpIHdpdGgKc3RhdGljIGNhbGwgc2xvdHMgKHdoaWNoIGNhbm5vdCBhbGxvdyByZWdpc3Rlcmlu
ZyBtb3JlIHRoYW4gbnVtYmVyIG9mCmJ1aWx0LWluIExTTSBtb2R1bGVzKS4KCkkgY29uc2lkZXJl
ZCB0cnlpbmcgS3Byb2JlcyBhbmQgQlBGLUxTTSBmb3IgcmVpbXBsZW1lbnRpbmcgVE9NT1lPLCBi
dXQgdGhlCmNvbmNsdXNpb24gaXMgdGhhdCBLcHJvYmVzIGFuZCBCUEYtTFNNIGFyZSB0b28gcmVz
dHJpY3RlZCB0byByZWltcGxlbWVudApUT01PWU8uCgpQYXVsIE1vb3JlIGhhcyBjb21tZW50ZWQK
CiAgSSBkbyBub3QgaW50ZW50aW9uYWxseSBwbGFuIHRvIG1ha2UgbGlmZSBkaWZmaWN1bHQgZm9y
IHRoZSBvdXQtb2YtdHJlZQogIExTTXMsIGJ1dCBpZiB0aGF0IGhhcHBlbnMgYXMgYSByZXN1bHQg
b2YgZGVzaWduIGRlY2lzaW9ucyBpbnRlbmRlZCB0bwogIGJlbmVmaXQgaW4tdHJlZSBMU01zIHRo
YXQgaXMgYWNjZXB0YWJsZSBhcyBmYXIgYXMgSSBhbSBjb25jZXJuZWQuCgphdCBbM10uIEJ1dCB0
aGUgc3RhdGljIGNhbGxzIGNoYW5nZSBzdWRkZW5seSBqdW1wZWQgaW4sIGFuZCB0aGF0IG1hZGUg
bGlmZQpkaWZmaWN1bHQgZm9yIHRoZSBpbi10cmVlIGJ1dCBub3QgYnVpbHQtaW4gTFNNcyBhcyBh
IHJlc3VsdCBvZiBkZXNpZ24KZGVjaXNpb25zIGludGVuZGVkIHRvIGJlbmVmaXQgaW4tdHJlZSBh
bmQgYnVpbHQtaW4gTFNNcy4KCk5vdyB0aGF0IHRoZSBzdGF0aWMgY2FsbHMgY2hhbmdlIGlzIGdv
aW5nIHRvIGJlIG1lcmdlZCBpbnRvIExpbnV4IDYuMTIsCkkgcHJvcG9zZSB0aGlzIHBhdGNoIGZv
ciByZWNvdmVyaW5nIGxpZmUgZm9yICJpbi10cmVlIGJ1dCBub3QgYnVpbHQtaW4iCkxTTXMsIGJ5
IG9mZmljaWFsbHkgYWxsb3dpbmcgbG9hZGFibGUga2VybmVsIG1vZHVsZSBiYXNlZCBMU00gbW9k
dWxlcy4KCkknbSBub3QgcGxhbm5pbmcgdG8gcHJvcG9zZSBhIGNoYW5nZSBmb3IgYWxsb3dpbmcg
dW5yZWdpc3RyYXRpb24gb2YgTFNNCm1vZHVsZXMgYWZ0ZXIgYm9vdCwgZm9yIEkgYWdyZWUgb25l
IG9mIGNvbmNlcm5zCgogIHRoZSBhYmlsaXR5IHRvIHVubG9hZCBhIHNlY3VyaXR5IG1vZHVsZSBp
cyBub3QgcmVxdWlyZWQgYnkgaW4tdHJlZQogIHVzZXJzIGFuZCBwb3RlbnRpYWxseSBjb21wbGlj
YXRlcyB0aGUgb3ZlcmFsbCBzZWN1cml0eSBhcmNoaXRlY3R1cmUKCmluICJzZWN1cml0eTogQ29u
dmVydCBMU00gaW50byBhIHN0YXRpYyBpbnRlcmZhY2UiIGNoYW5nZS4gQnV0IEkgYXNzZXJ0CnRo
YXQgdGhlIGFiaWxpdHkgdG8gbG9hZCBhIHNlY3VyaXR5IG1vZHVsZSAoaS5lLiBsb2FkYWJsZSBr
ZXJuZWwgbW9kdWxlCmJhc2VkIExTTXMpIGlzIGluZXZpdGFibGUgZHVlIHRvIHVuc29sdmFibGUg
cmVhbGl0aWVzLgoKVGhlIExTTSBob29rcyBmb3IgbG9hZGFibGUga2VybmVsIG1vZHVsZSBiYXNl
ZCBMU01zIGFyZSBlbmFibGVkIG9ubHkgaWYKdGhlIGtlcm5lbCBpcyBib290ZWQgd2l0aCAnZHlu
YW1pY19sc20nIGtlcm5lbCBjb21tYW5kIGxpbmUgb3B0aW9uIGFkZGVkCmluIG9yZGVyIHRvIGhv
bmVyIHRoZSBhZG1pbmlzdHJhdG9yJ3MgZGVjaXNpb24gYW5kIGF2b2lkIG92ZXJoZWFkIHdoZW4K
dGhlIGFkbWluaXN0cmF0b3IgZG9lcyBub3QgcGxhbiB0byB1c2UgbG9hZGFibGUga2VybmVsIG1v
ZHVsZSBiYXNlZCBMU01zLgoKT2YgY291cnNlLCBMaW51eCBkaXN0cmlidXRvcnMgbWlnaHQgcmV2
ZXJ0IHRoaXMgcGF0Y2ggaW4gdGhlaXIga2VybmVscyBpZgp0aGVpciBrZXJuZWxzIGFyZSBpbnRl
bmRlZCBmb3IgdmVyeSBzcGVjaWZpYy9kZWRpY2F0ZWQgcHVycG9zZXMuIEJ1dCB3aGF0CmlzIGlt
cG9ydGFudCBpcyB0aGF0IHdlIGFnYWluIG9mZmljaWFsbHkgc3VwcG9ydCBMU00gbW9kdWxlcyB0
aGF0IGFyZQppbXBsZW1lbnRlZCBhcyBsb2FkYWJsZSBrZXJuZWwgbW9kdWxlcyBpbiBhY2NvcmRh
bmNlIHdpdGggdXBzdHJlYW0gZmlyc3QKcG9saWN5LgoKTGluazogaHR0cHM6Ly9idWd6aWxsYS5y
ZWRoYXQuY29tL3Nob3dfYnVnLmNnaT9pZD01NDI5ODYgWzFdCkxpbms6IGh0dHBzOi8vdG9tb3lv
LnNvdXJjZWZvcmdlLm5ldC9ha2FyaS9jb21wYXJpc29uLmh0bWwgWzJdCkxpbms6IGh0dHBzOi8v
bGttbC5rZXJuZWwub3JnL3IvQ0FIQzlWaFNHMlV6RTlOMC10QUpjOEIzTWoxUEV1SjJiNndzb19E
VXNfWTgzeXF3aGpBQG1haWwuZ21haWwuY29tIFszXQpTaWduZWQtb2ZmLWJ5OiBUZXRzdW8gSGFu
ZGEgPHBlbmd1aW4ta2VybmVsQEktbG92ZS5TQUtVUkEubmUuanA+Ci0tLQpJJ2xsIHN0YXJ0IHVw
ZGF0aW5nIHNlY3VyaXR5L3RvbW95byBhZnRlciB0aGlzIGNoYW5nZSBpcyBhY2NlcHRlZC4gRm9y
CnRob3NlIHdobyB3YW50IHRvIHRyeSB0aGlzIGNoYW5nZSBub3csIGFuIGV4YW1wbGUgbW9kdWxl
IGlzIHNob3duIGJlbG93LgotLS0tLQojaW5jbHVkZSA8bGludXgvbHNtX2hvb2tzLmg+CgpzdGF0
aWMgdm9pZCB0ZXN0X2Jwcm1fY29tbWl0dGVkX2NyZWRzKGNvbnN0IHN0cnVjdCBsaW51eF9iaW5w
cm0gKmJwcm0pCnsKICAgICAgICBwcl9pbmZvX29uY2UoIiVzKCkgaXMgY2FsbGVkXG4iLCBfX2Z1
bmNfXyk7Cn0KCnN0YXRpYyBpbnQgdGVzdF9maWxlX29wZW4oc3RydWN0IGZpbGUgKmYpCnsKICAg
ICAgICBwcl9pbmZvX29uY2UoIiVzKCkgaXMgY2FsbGVkXG4iLCBfX2Z1bmNfXyk7CiAgICAgICAg
cmV0dXJuIDA7Cn0KCnN0YXRpYyBjb25zdCBzdHJ1Y3QgbHNtX2lkIHRlc3RfbHNtaWQgPSB7CiAg
ICAgICAgLm5hbWUgPSAidGVzdCIsCn07CgpzdGF0aWMgc3RydWN0IHNlY3VyaXR5X2R5bmFtaWNf
aG9va19saXN0IHRlc3RfaG9va3NbXSA9IHsKICAgICAgICBMU01fSE9PS19JTklUKGZpbGVfb3Bl
biwgdGVzdF9maWxlX29wZW4pLAogICAgICAgIExTTV9IT09LX0lOSVQoYnBybV9jb21taXR0ZWRf
Y3JlZHMsIHRlc3RfYnBybV9jb21taXR0ZWRfY3JlZHMpLAp9OwoKc3RhdGljIGludCBfX2luaXQg
dGVzdF9pbml0KHZvaWQpCnsKICAgICAgICByZXR1cm4gc2VjdXJpdHlfYWRkX2R5bmFtaWNfaG9v
a3ModGVzdF9ob29rcywgQVJSQVlfU0laRSh0ZXN0X2hvb2tzKSwKICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgJnRlc3RfbHNtaWQpOwp9Cgptb2R1bGVfaW5pdCh0ZXN0
X2luaXQpOwpNT0RVTEVfTElDRU5TRSgiR1BMIik7Ci0tLS0tCgogaW5jbHVkZS9saW51eC9sc21f
aG9va3MuaCB8ICAyNCArKysrKwogc2VjdXJpdHkvc2VjdXJpdHkuYyAgICAgICB8IDIwMCArKysr
KysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKy0tLQogMiBmaWxlcyBjaGFuZ2VkLCAyMTAg
aW5zZXJ0aW9ucygrKSwgMTQgZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEvaW5jbHVkZS9saW51
eC9sc21faG9va3MuaCBiL2luY2x1ZGUvbGludXgvbHNtX2hvb2tzLmgKaW5kZXggMDkwZDFkM2Ux
OWZlZC4uYWZlNGVlZWI3YmQ1MiAxMDA2NDQKLS0tIGEvaW5jbHVkZS9saW51eC9sc21faG9va3Mu
aAorKysgYi9pbmNsdWRlL2xpbnV4L2xzbV9ob29rcy5oCkBAIC03MSw2ICs3MSwxMiBAQCBzdHJ1
Y3QgbHNtX3N0YXRpY19jYWxsc190YWJsZSB7CiAJI3VuZGVmIExTTV9IT09LCiB9IF9fcGFja2Vk
IF9fcmFuZG9taXplX2xheW91dDsKIAorc3RydWN0IHNlY3VyaXR5X2R5bmFtaWNfaG9va19oZWFk
cyB7CisJI2RlZmluZSBMU01fSE9PSyhSRVQsIERFRkFVTFQsIE5BTUUsIC4uLikgc3RydWN0IGhs
aXN0X2hlYWQgTkFNRTsKKwkjaW5jbHVkZSAibHNtX2hvb2tfZGVmcy5oIgorCSN1bmRlZiBMU01f
SE9PSworfSBfX3JhbmRvbWl6ZV9sYXlvdXQ7CisKIC8qKgogICogc3RydWN0IGxzbV9pZCAtIElk
ZW50aWZ5IGEgTGludXggU2VjdXJpdHkgTW9kdWxlLgogICogQGxzbTogbmFtZSBvZiB0aGUgTFNN
LCBtdXN0IGJlIGFwcHJvdmVkIGJ5IHRoZSBMU00gbWFpbnRhaW5lcnMKQEAgLTk4LDYgKzEwNCwx
MyBAQCBzdHJ1Y3Qgc2VjdXJpdHlfaG9va19saXN0IHsKIAljb25zdCBzdHJ1Y3QgbHNtX2lkICps
c21pZDsKIH0gX19yYW5kb21pemVfbGF5b3V0OwogCitzdHJ1Y3Qgc2VjdXJpdHlfZHluYW1pY19o
b29rX2xpc3QgeworCXN0cnVjdCBobGlzdF9ub2RlCQlsaXN0OworCXN0cnVjdCBobGlzdF9oZWFk
CQkqaGVhZDsKKwl1bmlvbiBzZWN1cml0eV9saXN0X29wdGlvbnMJaG9vazsKKwljb25zdCBzdHJ1
Y3QgbHNtX2lkCQkqbHNtaWQ7Cit9IF9fcmFuZG9taXplX2xheW91dDsKKwogLyoKICAqIFNlY3Vy
aXR5IGJsb2Igc2l6ZSBvciBvZmZzZXQgZGF0YS4KICAqLwpAQCAtMTMwLDE0ICsxNDMsMjQgQEAg
c3RydWN0IGxzbV9ibG9iX3NpemVzIHsKICAqIGNhcmUgb2YgdGhlIGNvbW1vbiBjYXNlIGFuZCBy
ZWR1Y2VzIHRoZSBhbW91bnQgb2YKICAqIHRleHQgaW52b2x2ZWQuCiAgKi8KKyNpZm5kZWYgTU9E
VUxFCiAjZGVmaW5lIExTTV9IT09LX0lOSVQoTkFNRSwgSE9PSykJCQlcCiAJewkJCQkJCVwKIAkJ
LnNjYWxscyA9IHN0YXRpY19jYWxsc190YWJsZS5OQU1FLAlcCiAJCS5ob29rID0geyAuTkFNRSA9
IEhPT0sgfQkJXAogCX0KKyNlbHNlCisjZGVmaW5lIExTTV9IT09LX0lOSVQoTkFNRSwgSE9PSykJ
CQlcCisJewkJCQkJCVwKKwkJLmhlYWQgPSAmc2VjdXJpdHlfaG9va19oZWFkcy5OQU1FLAlcCisJ
CS5ob29rID0geyAuTkFNRSA9IEhPT0sgfQkJXAorCX0KKyNlbmRpZgogCiBleHRlcm4gdm9pZCBz
ZWN1cml0eV9hZGRfaG9va3Moc3RydWN0IHNlY3VyaXR5X2hvb2tfbGlzdCAqaG9va3MsIGludCBj
b3VudCwKIAkJCSAgICAgICBjb25zdCBzdHJ1Y3QgbHNtX2lkICpsc21pZCk7CitleHRlcm4gaW50
IHNlY3VyaXR5X2FkZF9keW5hbWljX2hvb2tzKHN0cnVjdCBzZWN1cml0eV9keW5hbWljX2hvb2tf
bGlzdCAqaG9va3MsIGludCBjb3VudCwKKwkJCQkgICAgICBjb25zdCBzdHJ1Y3QgbHNtX2lkICps
c21pZCk7CiAKICNkZWZpbmUgTFNNX0ZMQUdfTEVHQUNZX01BSk9SCUJJVCgwKQogI2RlZmluZSBM
U01fRkxBR19FWENMVVNJVkUJQklUKDEpCkBAIC0xNzAsNiArMTkzLDcgQEAgc3RydWN0IGxzbV9p
bmZvIHsKIC8qIERPIE5PVCB0YW1wZXIgd2l0aCB0aGVzZSB2YXJpYWJsZXMgb3V0c2lkZSBvZiB0
aGUgTFNNIGZyYW1ld29yayAqLwogZXh0ZXJuIGNoYXIgKmxzbV9uYW1lczsKIGV4dGVybiBzdHJ1
Y3QgbHNtX3N0YXRpY19jYWxsc190YWJsZSBzdGF0aWNfY2FsbHNfdGFibGUgX19yb19hZnRlcl9p
bml0OworZXh0ZXJuIHN0cnVjdCBzZWN1cml0eV9keW5hbWljX2hvb2tfaGVhZHMgc2VjdXJpdHlf
aG9va19oZWFkczsKIGV4dGVybiBzdHJ1Y3QgbHNtX2luZm8gX19zdGFydF9sc21faW5mb1tdLCBf
X2VuZF9sc21faW5mb1tdOwogZXh0ZXJuIHN0cnVjdCBsc21faW5mbyBfX3N0YXJ0X2Vhcmx5X2xz
bV9pbmZvW10sIF9fZW5kX2Vhcmx5X2xzbV9pbmZvW107CiAKZGlmZiAtLWdpdCBhL3NlY3VyaXR5
L3NlY3VyaXR5LmMgYi9zZWN1cml0eS9zZWN1cml0eS5jCmluZGV4IDcyNzJiYmVhMDVjYjguLjFi
NmM2NGM2MzFhYzAgMTAwNjQ0Ci0tLSBhL3NlY3VyaXR5L3NlY3VyaXR5LmMKKysrIGIvc2VjdXJp
dHkvc2VjdXJpdHkuYwpAQCAtMTMwLDYgKzEzMCwxMCBAQCBzdGF0aWMgX19pbml0ZGF0YSBzdHJ1
Y3QgbHNtX2luZm8gKmV4Y2x1c2l2ZTsKICN1bmRlZiBMU01fSE9PSwogI3VuZGVmIERFRklORV9M
U01fU1RBVElDX0NBTEwKIAorc3RydWN0IHNlY3VyaXR5X2R5bmFtaWNfaG9va19oZWFkcyBzZWN1
cml0eV9ob29rX2hlYWRzOworRVhQT1JUX1NZTUJPTF9HUEwoc2VjdXJpdHlfaG9va19oZWFkcyk7
CitzdGF0aWMgREVGSU5FX1NUQVRJQ19LRVlfRkFMU0VfUk8oc2VjdXJpdHlfZHluYW1pY19ob29r
X2tleSk7CisKIC8qCiAgKiBJbml0aWFsaXNlIGEgdGFibGUgb2Ygc3RhdGljIGNhbGxzIGZvciBl
YWNoIExTTSBob29rLgogICogREVGSU5FX1NUQVRJQ19DQUxMX05VTEwgaW52b2NhdGlvbiBhYm92
ZSBnZW5lcmF0ZXMgYSBrZXkgKFNUQVRJQ19DQUxMX0tFWSkKQEAgLTY0NCw2ICs2NDgsMzIgQEAg
dm9pZCBfX2luaXQgc2VjdXJpdHlfYWRkX2hvb2tzKHN0cnVjdCBzZWN1cml0eV9ob29rX2xpc3Qg
Kmhvb2tzLCBpbnQgY291bnQsCiAJfQogfQogCitzdGF0aWMgaW50IF9faW5pdCBlbmFibGVfZHlu
YW1pY19ob29rcyhjaGFyICpzdHIpCit7CisJc3RhdGljX2JyYW5jaF9lbmFibGUoJnNlY3VyaXR5
X2R5bmFtaWNfaG9va19rZXkpOworCXByX2luZm8oIkR5bmFtaWMgTFNNIGhvb2sgZW5hYmxlZC5c
biIpOworCXJldHVybiAxOworfQorX19zZXR1cCgiZHluYW1pY19sc20iLCBlbmFibGVfZHluYW1p
Y19ob29rcyk7CisKK2ludCBzZWN1cml0eV9hZGRfZHluYW1pY19ob29rcyhzdHJ1Y3Qgc2VjdXJp
dHlfZHluYW1pY19ob29rX2xpc3QgKmhvb2tzLCBpbnQgY291bnQsCisJCQkgICAgICAgY29uc3Qg
c3RydWN0IGxzbV9pZCAqbHNtaWQpCit7CisJaW50IGk7CisKKwlpZiAoIXN0YXRpY19rZXlfZW5h
YmxlZCgmc2VjdXJpdHlfZHluYW1pY19ob29rX2tleSkpIHsKKwkJcHJfaW5mbygiQm9vdCB3aXRo
ICdkeW5hbWljX2xzbScga2VybmVsIGNvbW1hbmQgbGluZSBvcHRpb24gdG8gZW5hYmxlIGR5bmFt
aWMgTFNNIGhvb2suXG4iKTsKKwkJcmV0dXJuIC1FSU5WQUw7CisJfQorCXByX2luZm8oIkR5bmFt
aWMgTFNNIGhvb2s6IGFkZGluZyAnJXMnIG1vZHVsZS5cbiIsIGxzbWlkLT5uYW1lKTsKKwlmb3Ig
KGkgPSAwOyBpIDwgY291bnQ7IGkrKykgeworCQlob29rc1tpXS5sc21pZCA9IGxzbWlkOworCQlo
bGlzdF9hZGRfdGFpbF9yY3UoJmhvb2tzW2ldLmxpc3QsIGhvb2tzW2ldLmhlYWQpOworCX0KKwly
ZXR1cm4gMDsKK30KK0VYUE9SVF9TWU1CT0xfR1BMKHNlY3VyaXR5X2FkZF9keW5hbWljX2hvb2tz
KTsKKwogaW50IGNhbGxfYmxvY2tpbmdfbHNtX25vdGlmaWVyKGVudW0gbHNtX2V2ZW50IGV2ZW50
LCB2b2lkICpkYXRhKQogewogCXJldHVybiBibG9ja2luZ19ub3RpZmllcl9jYWxsX2NoYWluKCZi
bG9ja2luZ19sc21fbm90aWZpZXJfY2hhaW4sCkBAIC05NTIsOSArOTgyLDE1IEBAIGRvIHsJCQkJ
CQkJCQkgICAgIFwKIAl9CQkJCQkJCQkgICAgIFwKIH0gd2hpbGUgKDApOwogCi0jZGVmaW5lIGNh
bGxfdm9pZF9ob29rKEhPT0ssIC4uLikgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBc
Ci0JZG8geyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgIFwKKyNkZWZpbmUgY2FsbF92b2lkX2hvb2soSE9PSywgLi4uKQkJCQkJXAorCWRvIHsJCQkJ
CQkJCVwKIAkJTFNNX0xPT1BfVU5ST0xMKF9fQ0FMTF9TVEFUSUNfVk9JRCwgSE9PSywgX19WQV9B
UkdTX18pOyBcCisJCWlmIChzdGF0aWNfa2V5X2VuYWJsZWQoJnNlY3VyaXR5X2R5bmFtaWNfaG9v
a19rZXkpKSB7IFwKKwkJCXN0cnVjdCBzZWN1cml0eV9keW5hbWljX2hvb2tfbGlzdCAqUDsJCVwK
KwkJCQkJCQkJCVwKKwkJCWhsaXN0X2Zvcl9lYWNoX2VudHJ5KFAsICZzZWN1cml0eV9ob29rX2hl
YWRzLkhPT0ssIGxpc3QpIFwKKwkJCQlQLT5ob29rLkhPT0soX19WQV9BUkdTX18pOwkJXAorCQl9
CQkJCQkJCVwKIAl9IHdoaWxlICgwKQogCiAKQEAgLTk3Myw2ICsxMDA5LDE1IEBAIGRvIHsJCQkJ
CQkJCQkgICAgIFwKIAlpbnQgUkMgPSBMU01fUkVUX0RFRkFVTFQoSE9PSyk7CQkJCQlcCiAJCQkJ
CQkJCQlcCiAJTFNNX0xPT1BfVU5ST0xMKF9fQ0FMTF9TVEFUSUNfSU5ULCBSQywgSE9PSywgT1VU
LCBfX1ZBX0FSR1NfXyk7CVwKKwlpZiAoc3RhdGljX2tleV9lbmFibGVkKCZzZWN1cml0eV9keW5h
bWljX2hvb2tfa2V5KSkgewlcCisJCXN0cnVjdCBzZWN1cml0eV9keW5hbWljX2hvb2tfbGlzdCAq
UDsJCQlcCisJCQkJCQkJCQlcCisJCWhsaXN0X2Zvcl9lYWNoX2VudHJ5KFAsICZzZWN1cml0eV9o
b29rX2hlYWRzLkhPT0ssIGxpc3QpIHsgXAorCQkJUkMgPSBQLT5ob29rLkhPT0soX19WQV9BUkdT
X18pOwkJCVwKKwkJCWlmIChSQyAhPSBMU01fUkVUX0RFRkFVTFQoSE9PSykpCQlcCisJCQkJZ290
byBPVVQ7CQkJCVwKKwkJfQkJCQkJCQlcCisJfQkJCQkJCQkJXAogT1VUOgkJCQkJCQkJCVwKIAlS
QzsJCQkJCQkJCVwKIH0pCkBAIC0xMjMwLDkgKzEyNzUsMjEgQEAgaW50IHNlY3VyaXR5X3ZtX2Vu
b3VnaF9tZW1vcnlfbW0oc3RydWN0IG1tX3N0cnVjdCAqbW0sIGxvbmcgcGFnZXMpCiAJCXJjID0g
c2NhbGwtPmhsLT5ob29rLnZtX2Vub3VnaF9tZW1vcnkobW0sIHBhZ2VzKTsKIAkJaWYgKHJjIDwg
MCkgewogCQkJY2FwX3N5c19hZG1pbiA9IDA7Ci0JCQlicmVhazsKKwkJCWdvdG8gZG9uZTsKIAkJ
fQogCX0KKwlpZiAoc3RhdGljX2tleV9lbmFibGVkKCZzZWN1cml0eV9keW5hbWljX2hvb2tfa2V5
KSkgeworCQlzdHJ1Y3Qgc2VjdXJpdHlfZHluYW1pY19ob29rX2xpc3QgKmhwOworCisJCWhsaXN0
X2Zvcl9lYWNoX2VudHJ5KGhwLCAmc2VjdXJpdHlfaG9va19oZWFkcy52bV9lbm91Z2hfbWVtb3J5
LCBsaXN0KSB7CisJCQlyYyA9IGhwLT5ob29rLnZtX2Vub3VnaF9tZW1vcnkobW0sIHBhZ2VzKTsK
KwkJCWlmIChyYyA8PSAwKSB7CisJCQkJY2FwX3N5c19hZG1pbiA9IDA7CisJCQkJYnJlYWs7CisJ
CQl9CisJCX0KKwl9CisgZG9uZToKIAlyZXR1cm4gX192bV9lbm91Z2hfbWVtb3J5KG1tLCBwYWdl
cywgY2FwX3N5c19hZG1pbik7CiB9CiAKQEAgLTEzODUsNiArMTQ0MiwxOCBAQCBpbnQgc2VjdXJp
dHlfZnNfY29udGV4dF9wYXJzZV9wYXJhbShzdHJ1Y3QgZnNfY29udGV4dCAqZmMsCiAJCWVsc2Ug
aWYgKHRyYyAhPSAtRU5PUEFSQU0pCiAJCQlyZXR1cm4gdHJjOwogCX0KKwlpZiAoc3RhdGljX2tl
eV9lbmFibGVkKCZzZWN1cml0eV9keW5hbWljX2hvb2tfa2V5KSkgeworCQlzdHJ1Y3Qgc2VjdXJp
dHlfZHluYW1pY19ob29rX2xpc3QgKmhwOworCisJCWhsaXN0X2Zvcl9lYWNoX2VudHJ5KGhwLCAm
c2VjdXJpdHlfaG9va19oZWFkcy5mc19jb250ZXh0X3BhcnNlX3BhcmFtLAorCQkJCSAgICAgbGlz
dCkgeworCQkJdHJjID0gaHAtPmhvb2suZnNfY29udGV4dF9wYXJzZV9wYXJhbShmYywgcGFyYW0p
OworCQkJaWYgKHRyYyA9PSAwKQorCQkJCXJjID0gMDsKKwkJCWVsc2UgaWYgKHRyYyAhPSAtRU5P
UEFSQU0pCisJCQkJcmV0dXJuIHRyYzsKKwkJfQorCX0KIAlyZXR1cm4gcmM7CiB9CiAKQEAgLTE2
MTYsOCArMTY4NSwyMCBAQCBpbnQgc2VjdXJpdHlfc2Jfc2V0X21udF9vcHRzKHN0cnVjdCBzdXBl
cl9ibG9jayAqc2IsCiAJCXJjID0gc2NhbGwtPmhsLT5ob29rLnNiX3NldF9tbnRfb3B0cyhzYiwg
bW50X29wdHMsIGtlcm5fZmxhZ3MsCiAJCQkJCSAgICAgIHNldF9rZXJuX2ZsYWdzKTsKIAkJaWYg
KHJjICE9IExTTV9SRVRfREVGQVVMVChzYl9zZXRfbW50X29wdHMpKQotCQkJYnJlYWs7CisJCQln
b3RvIGRvbmU7CisJfQorCWlmIChzdGF0aWNfa2V5X2VuYWJsZWQoJnNlY3VyaXR5X2R5bmFtaWNf
aG9va19rZXkpKSB7CisJCXN0cnVjdCBzZWN1cml0eV9keW5hbWljX2hvb2tfbGlzdCAqaHA7CisK
KwkJaGxpc3RfZm9yX2VhY2hfZW50cnkoaHAsICZzZWN1cml0eV9ob29rX2hlYWRzLnNiX3NldF9t
bnRfb3B0cywKKwkJCQkgICAgIGxpc3QpIHsKKwkJCXJjID0gaHAtPmhvb2suc2Jfc2V0X21udF9v
cHRzKHNiLCBtbnRfb3B0cywga2Vybl9mbGFncywKKwkJCQkJCSAgICAgIHNldF9rZXJuX2ZsYWdz
KTsKKwkJCWlmIChyYyAhPSBMU01fUkVUX0RFRkFVTFQoc2Jfc2V0X21udF9vcHRzKSkKKwkJCQli
cmVhazsKKwkJfQogCX0KKyBkb25lOgogCXJldHVybiByYzsKIH0KIEVYUE9SVF9TWU1CT0woc2Vj
dXJpdHlfc2Jfc2V0X21udF9vcHRzKTsKQEAgLTE4MjYsMTcgKzE5MDcsMjggQEAgaW50IHNlY3Vy
aXR5X2lub2RlX2luaXRfc2VjdXJpdHkoc3RydWN0IGlub2RlICppbm9kZSwgc3RydWN0IGlub2Rl
ICpkaXIsCiAJCQlyZXR1cm4gLUVOT01FTTsKIAl9CiAKKwkvKgorCSAqIEFzIGRvY3VtZW50ZWQg
aW4gbHNtX2hvb2tzLmgsIC1FT1BOT1RTVVBQIGluIHRoaXMgY29udGV4dAorCSAqIG1lYW5zIHRo
YXQgdGhlIExTTSBpcyBub3Qgd2lsbGluZyB0byBwcm92aWRlIGFuIHhhdHRyLCBub3QKKwkgKiB0
aGF0IGl0IHdhbnRzIHRvIHNpZ25hbCBhbiBlcnJvci4gVGh1cywgY29udGludWUgdG8gaW52b2tl
CisJICogdGhlIHJlbWFpbmluZyBMU01zLgorCSAqLwogCWxzbV9mb3JfZWFjaF9ob29rKHNjYWxs
LCBpbm9kZV9pbml0X3NlY3VyaXR5KSB7CiAJCXJldCA9IHNjYWxsLT5obC0+aG9vay5pbm9kZV9p
bml0X3NlY3VyaXR5KGlub2RlLCBkaXIsIHFzdHIsIG5ld194YXR0cnMsCiAJCQkJCQkgICZ4YXR0
cl9jb3VudCk7CiAJCWlmIChyZXQgJiYgcmV0ICE9IC1FT1BOT1RTVVBQKQogCQkJZ290byBvdXQ7
Ci0JCS8qCi0JCSAqIEFzIGRvY3VtZW50ZWQgaW4gbHNtX2hvb2tzLmgsIC1FT1BOT1RTVVBQIGlu
IHRoaXMgY29udGV4dAotCQkgKiBtZWFucyB0aGF0IHRoZSBMU00gaXMgbm90IHdpbGxpbmcgdG8g
cHJvdmlkZSBhbiB4YXR0ciwgbm90Ci0JCSAqIHRoYXQgaXQgd2FudHMgdG8gc2lnbmFsIGFuIGVy
cm9yLiBUaHVzLCBjb250aW51ZSB0byBpbnZva2UKLQkJICogdGhlIHJlbWFpbmluZyBMU01zLgot
CQkgKi8KKwl9CisJaWYgKHN0YXRpY19rZXlfZW5hYmxlZCgmc2VjdXJpdHlfZHluYW1pY19ob29r
X2tleSkpIHsKKwkJc3RydWN0IHNlY3VyaXR5X2R5bmFtaWNfaG9va19saXN0ICpocDsKKworCQlo
bGlzdF9mb3JfZWFjaF9lbnRyeShocCwgJnNlY3VyaXR5X2hvb2tfaGVhZHMuaW5vZGVfaW5pdF9z
ZWN1cml0eSwKKwkJCQkgICAgIGxpc3QpIHsKKwkJCXJldCA9IGhwLT5ob29rLmlub2RlX2luaXRf
c2VjdXJpdHkoaW5vZGUsIGRpciwgcXN0ciwgbmV3X3hhdHRycywKKwkJCQkJCQkgICAmeGF0dHJf
Y291bnQpOworCQkJaWYgKHJldCAmJiByZXQgIT0gLUVPUE5PVFNVUFApCisJCQkJZ290byBvdXQ7
CisJCX0KIAl9CiAKIAkvKiBJZiBpbml0eGF0dHJzKCkgaXMgTlVMTCwgeGF0dHJfY291bnQgaXMg
emVybywgc2tpcCB0aGUgY2FsbC4gKi8KQEAgLTM2ODEsOSArMzc3MywyMiBAQCBpbnQgc2VjdXJp
dHlfdGFza19wcmN0bChpbnQgb3B0aW9uLCB1bnNpZ25lZCBsb25nIGFyZzIsIHVuc2lnbmVkIGxv
bmcgYXJnMywKIAkJaWYgKHRoaXNyYyAhPSBMU01fUkVUX0RFRkFVTFQodGFza19wcmN0bCkpIHsK
IAkJCXJjID0gdGhpc3JjOwogCQkJaWYgKHRoaXNyYyAhPSAwKQotCQkJCWJyZWFrOworCQkJCWdv
dG8gZG9uZTsKIAkJfQogCX0KKwlpZiAoc3RhdGljX2tleV9lbmFibGVkKCZzZWN1cml0eV9keW5h
bWljX2hvb2tfa2V5KSkgeworCQlzdHJ1Y3Qgc2VjdXJpdHlfZHluYW1pY19ob29rX2xpc3QgKmhw
OworCisJCWhsaXN0X2Zvcl9lYWNoX2VudHJ5KGhwLCAmc2VjdXJpdHlfaG9va19oZWFkcy50YXNr
X3ByY3RsLCBsaXN0KSB7CisJCQl0aGlzcmMgPSBocC0+aG9vay50YXNrX3ByY3RsKG9wdGlvbiwg
YXJnMiwgYXJnMywgYXJnNCwgYXJnNSk7CisJCQlpZiAodGhpc3JjICE9IExTTV9SRVRfREVGQVVM
VCh0YXNrX3ByY3RsKSkgeworCQkJCXJjID0gdGhpc3JjOworCQkJCWlmICh0aGlzcmMgIT0gMCkK
KwkJCQkJYnJlYWs7CisJCQl9CisJCX0KKwl9CisgZG9uZToKIAlyZXR1cm4gcmM7CiB9CiAKQEAg
LTQxNDQsOCArNDI0OSwzOCBAQCBpbnQgc2VjdXJpdHlfZ2V0c2VsZmF0dHIodW5zaWduZWQgaW50
IGF0dHIsIHN0cnVjdCBsc21fY3R4IF9fdXNlciAqdWN0eCwKIAkJdG90YWwgKz0gZW50cnlzaXpl
OwogCQljb3VudCArPSByYzsKIAkJaWYgKHNpbmdsZSkKLQkJCWJyZWFrOworCQkJZ290byBkb25l
OwogCX0KKwlpZiAoc3RhdGljX2tleV9lbmFibGVkKCZzZWN1cml0eV9keW5hbWljX2hvb2tfa2V5
KSkgeworCQlzdHJ1Y3Qgc2VjdXJpdHlfZHluYW1pY19ob29rX2xpc3QgKmhwOworCisJCWhsaXN0
X2Zvcl9lYWNoX2VudHJ5KGhwLCAmc2VjdXJpdHlfaG9va19oZWFkcy5nZXRzZWxmYXR0ciwgbGlz
dCkgeworCQkJaWYgKHNpbmdsZSAmJiBsY3R4LmlkICE9IGhwLT5sc21pZC0+aWQpCisJCQkJY29u
dGludWU7CisJCQllbnRyeXNpemUgPSBsZWZ0OworCQkJaWYgKGJhc2UpCisJCQkJdWN0eCA9IChz
dHJ1Y3QgbHNtX2N0eCBfX3VzZXIgKikoYmFzZSArIHRvdGFsKTsKKwkJCXJjID0gaHAtPmhvb2su
Z2V0c2VsZmF0dHIoYXR0ciwgdWN0eCwgJmVudHJ5c2l6ZSwgZmxhZ3MpOworCQkJaWYgKHJjID09
IC1FT1BOT1RTVVBQKSB7CisJCQkJcmMgPSAwOworCQkJCWNvbnRpbnVlOworCQkJfQorCQkJaWYg
KHJjID09IC1FMkJJRykgeworCQkJCXJjID0gMDsKKwkJCQlsZWZ0ID0gMDsKKwkJCQl0b29iaWcg
PSB0cnVlOworCQkJfSBlbHNlIGlmIChyYyA8IDApCisJCQkJcmV0dXJuIHJjOworCQkJZWxzZQor
CQkJCWxlZnQgLT0gZW50cnlzaXplOworCisJCQl0b3RhbCArPSBlbnRyeXNpemU7CisJCQljb3Vu
dCArPSByYzsKKwkJCWlmIChzaW5nbGUpCisJCQkJYnJlYWs7CisJCX0KKwl9CisgZG9uZToKIAlp
ZiAocHV0X3VzZXIodG90YWwsIHNpemUpKQogCQlyZXR1cm4gLUVGQVVMVDsKIAlpZiAodG9vYmln
KQpAQCAtNDIwMiw4ICs0MzM3LDE3IEBAIGludCBzZWN1cml0eV9zZXRzZWxmYXR0cih1bnNpZ25l
ZCBpbnQgYXR0ciwgc3RydWN0IGxzbV9jdHggX191c2VyICp1Y3R4LAogCWxzbV9mb3JfZWFjaF9o
b29rKHNjYWxsLCBzZXRzZWxmYXR0cikKIAkJaWYgKChzY2FsbC0+aGwtPmxzbWlkLT5pZCkgPT0g
bGN0eC0+aWQpIHsKIAkJCXJjID0gc2NhbGwtPmhsLT5ob29rLnNldHNlbGZhdHRyKGF0dHIsIGxj
dHgsIHNpemUsIGZsYWdzKTsKLQkJCWJyZWFrOworCQkJZ290byBmcmVlX291dDsKIAkJfQorCWlm
IChzdGF0aWNfa2V5X2VuYWJsZWQoJnNlY3VyaXR5X2R5bmFtaWNfaG9va19rZXkpKSB7CisJCXN0
cnVjdCBzZWN1cml0eV9keW5hbWljX2hvb2tfbGlzdCAqaHA7CisKKwkJaGxpc3RfZm9yX2VhY2hf
ZW50cnkoaHAsICZzZWN1cml0eV9ob29rX2hlYWRzLnNldHNlbGZhdHRyLCBsaXN0KQorCQkJaWYg
KChocC0+bHNtaWQtPmlkKSA9PSBsY3R4LT5pZCkgeworCQkJCXJjID0gaHAtPmhvb2suc2V0c2Vs
ZmF0dHIoYXR0ciwgbGN0eCwgc2l6ZSwgZmxhZ3MpOworCQkJCWJyZWFrOworCQkJfQorCX0KIAog
ZnJlZV9vdXQ6CiAJa2ZyZWUobGN0eCk7CkBAIC00MjMxLDYgKzQzNzUsMTUgQEAgaW50IHNlY3Vy
aXR5X2dldHByb2NhdHRyKHN0cnVjdCB0YXNrX3N0cnVjdCAqcCwgaW50IGxzbWlkLCBjb25zdCBj
aGFyICpuYW1lLAogCQkJY29udGludWU7CiAJCXJldHVybiBzY2FsbC0+aGwtPmhvb2suZ2V0cHJv
Y2F0dHIocCwgbmFtZSwgdmFsdWUpOwogCX0KKwlpZiAoc3RhdGljX2tleV9lbmFibGVkKCZzZWN1
cml0eV9keW5hbWljX2hvb2tfa2V5KSkgeworCQlzdHJ1Y3Qgc2VjdXJpdHlfZHluYW1pY19ob29r
X2xpc3QgKmhwOworCisJCWhsaXN0X2Zvcl9lYWNoX2VudHJ5KGhwLCAmc2VjdXJpdHlfaG9va19o
ZWFkcy5nZXRwcm9jYXR0ciwgbGlzdCkgeworCQkJaWYgKGxzbWlkICE9IDAgJiYgbHNtaWQgIT0g
aHAtPmxzbWlkLT5pZCkKKwkJCQljb250aW51ZTsKKwkJCXJldHVybiBocC0+aG9vay5nZXRwcm9j
YXR0cihwLCBuYW1lLCB2YWx1ZSk7CisJCX0KKwl9CiAJcmV0dXJuIExTTV9SRVRfREVGQVVMVChn
ZXRwcm9jYXR0cik7CiB9CiAKQEAgLTQyNTUsNiArNDQwOCwxNSBAQCBpbnQgc2VjdXJpdHlfc2V0
cHJvY2F0dHIoaW50IGxzbWlkLCBjb25zdCBjaGFyICpuYW1lLCB2b2lkICp2YWx1ZSwgc2l6ZV90
IHNpemUpCiAJCQljb250aW51ZTsKIAkJcmV0dXJuIHNjYWxsLT5obC0+aG9vay5zZXRwcm9jYXR0
cihuYW1lLCB2YWx1ZSwgc2l6ZSk7CiAJfQorCWlmIChzdGF0aWNfa2V5X2VuYWJsZWQoJnNlY3Vy
aXR5X2R5bmFtaWNfaG9va19rZXkpKSB7CisJCXN0cnVjdCBzZWN1cml0eV9keW5hbWljX2hvb2tf
bGlzdCAqaHA7CisKKwkJaGxpc3RfZm9yX2VhY2hfZW50cnkoaHAsICZzZWN1cml0eV9ob29rX2hl
YWRzLnNldHByb2NhdHRyLCBsaXN0KSB7CisJCQlpZiAobHNtaWQgIT0gMCAmJiBsc21pZCAhPSBo
cC0+bHNtaWQtPmlkKQorCQkJCWNvbnRpbnVlOworCQkJcmV0dXJuIGhwLT5ob29rLnNldHByb2Nh
dHRyKG5hbWUsIHZhbHVlLCBzaXplKTsKKwkJfQorCX0KIAlyZXR1cm4gTFNNX1JFVF9ERUZBVUxU
KHNldHByb2NhdHRyKTsKIH0KIApAQCAtNTM5OSw4ICs1NTYxLDE4IEBAIGludCBzZWN1cml0eV94
ZnJtX3N0YXRlX3BvbF9mbG93X21hdGNoKHN0cnVjdCB4ZnJtX3N0YXRlICp4LAogCSAqLwogCWxz
bV9mb3JfZWFjaF9ob29rKHNjYWxsLCB4ZnJtX3N0YXRlX3BvbF9mbG93X21hdGNoKSB7CiAJCXJj
ID0gc2NhbGwtPmhsLT5ob29rLnhmcm1fc3RhdGVfcG9sX2Zsb3dfbWF0Y2goeCwgeHAsIGZsaWMp
OwotCQlicmVhazsKKwkJZ290byBvdXQ7CisJfQorCWlmIChzdGF0aWNfa2V5X2VuYWJsZWQoJnNl
Y3VyaXR5X2R5bmFtaWNfaG9va19rZXkpKSB7CisJCXN0cnVjdCBzZWN1cml0eV9keW5hbWljX2hv
b2tfbGlzdCAqaHA7CisKKwkJaGxpc3RfZm9yX2VhY2hfZW50cnkoaHAsICZzZWN1cml0eV9ob29r
X2hlYWRzLnhmcm1fc3RhdGVfcG9sX2Zsb3dfbWF0Y2gsCisJCQkJICAgICBsaXN0KSB7CisJCQly
YyA9IGhwLT5ob29rLnhmcm1fc3RhdGVfcG9sX2Zsb3dfbWF0Y2goeCwgeHAsIGZsaWMpOworCQkJ
YnJlYWs7CisJCX0KIAl9Cisgb3V0OgogCXJldHVybiByYzsKIH0KIAotLSAKMi40My41CgpfX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwp0b21veW8tdXNlcnMt
ZW4gbWFpbGluZyBsaXN0CnRvbW95by11c2Vycy1lbkBsaXN0cy5vc2RuLm1lCmh0dHBzOi8vbGlz
dHMub3Nkbi5tZS9tYWlsbWFuL2xpc3RpbmZvL3RvbW95by11c2Vycy1lbgo=
